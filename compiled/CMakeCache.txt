# This is the CMakeCache file.
# For build in directory: c:/Users/haven/OneDrive/Documents/Repositories/clucene/compiled
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//create targets for building the clucene-contribs
BUILD_CONTRIBS:BOOL=OFF

//create targets for building the clucene-contribs-lib
BUILD_CONTRIBS_LIB:BOOL=OFF

//create targets for building static libraries
BUILD_STATIC_LIBRARIES:BOOL=OFF

//The directory containing a CMake configuration file for Boost.
Boost_DIR:PATH=Boost_DIR-NOTFOUND

//Path to a file.
Boost_INCLUDE_DIR:PATH=Boost_INCLUDE_DIR-NOTFOUND

//For backwards compatibility, what version of CMake commands and
// syntax should this version of CMake try to support.
CMAKE_BACKWARDS_COMPATIBILITY:STRING=2.4

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel.
CMAKE_BUILD_TYPE:STRING=RelWithDebInfo

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/clucene

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/link.exe

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=clucene

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler.
CMAKE_RC_FLAGS:STRING=/DWIN32

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=OFF

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//disable multithreading - remove all locking code
DISABLE_MULTITHREADING:BOOL=OFF

//compile with -ansi flag
ENABLE_ANSI_MODE:BOOL=OFF

//enable ascii support
ENABLE_ASCII_MODE:BOOL=OFF

//Build the clucene documentation.
ENABLE_CLDOCS:BOOL=OFF

//enable various projects that test alternative build switches
ENABLE_COMPILE_TESTS:BOOL=OFF

//enable debug support
ENABLE_DEBUG:BOOL=OFF

//enable dmalloc memory leak checker
ENABLE_DMALLOC:BOOL=OFF

//enable mmap support (experimental)
ENABLE_MMAP:BOOL=OFF

//create build scripts for creating clucene packages
ENABLE_PACKAGING:BOOL=OFF

//Executable Output Directory
EXECUTABLE_OUTPUT_PATH:PATH=C:/Users/haven/OneDrive/Documents/Repositories/clucene/compiled/bin

//Library Output Directory
LIBRARY_OUTPUT_PATH:PATH=C:/Users/haven/OneDrive/Documents/Repositories/clucene/compiled/bin

//Define suffix of directory name (32/64)
LIB_SUFFIX:STRING=

//location for non-system independent files. defaults to CMAKE_INSTALL_PREFIX.
// see INSTALL documentation for further information.
LUCENE_SYS_INCLUDES:PATH=

//use internal character functions. required to run tests correctly
LUCENE_USE_INTERNAL_CHAR_FUNCTIONS:BOOL=ON

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=ZLIB_INCLUDE_DIR-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=ZLIB_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=ZLIB_LIBRARY_RELEASE-NOTFOUND

//Value Computed by CMake
clucene-ext_BINARY_DIR:STATIC=C:/Users/haven/OneDrive/Documents/Repositories/clucene/compiled/src/ext

//Value Computed by CMake
clucene-ext_SOURCE_DIR:STATIC=C:/Users/haven/OneDrive/Documents/Repositories/clucene/src/ext

//Value Computed by CMake
clucene-shared_BINARY_DIR:STATIC=C:/Users/haven/OneDrive/Documents/Repositories/clucene/compiled/src/shared

//Value Computed by CMake
clucene-shared_SOURCE_DIR:STATIC=C:/Users/haven/OneDrive/Documents/Repositories/clucene/src/shared

//Value Computed by CMake
clucene_BINARY_DIR:STATIC=C:/Users/haven/OneDrive/Documents/Repositories/clucene/compiled

//Value Computed by CMake
clucene_SOURCE_DIR:STATIC=C:/Users/haven/OneDrive/Documents/Repositories/clucene


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: Boost_DIR
Boost_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_INCLUDE_DIR
Boost_INCLUDE_DIR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/haven/OneDrive/Documents/Repositories/clucene/compiled
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=7
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 14 2015
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/haven/OneDrive/Documents/Repositories/clucene
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=3
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.7
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Have include algorithm
HAVE_ALGORITHM:INTERNAL=1
//Have include ctype.h
HAVE_CTYPE_H:INTERNAL=1
//Have include direct.h
HAVE_DIRECT_H:INTERNAL=1
//Have include dirent.h
HAVE_DIRENT_H:INTERNAL=
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include ext/hash_map
HAVE_EXT_HASH_MAP:INTERNAL=
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include functional
HAVE_FUNCTIONAL:INTERNAL=1
//Have include hash_map
HAVE_HASH_MAP:INTERNAL=
//Have include hash_set
HAVE_HASH_SET:INTERNAL=
//Have include io.h
HAVE_IO_H:INTERNAL=1
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have include list
HAVE_LIST:INTERNAL=1
//Have include map
HAVE_MAP:INTERNAL=1
//Have include math.h
HAVE_MATH_H:INTERNAL=1
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have include set
HAVE_SET:INTERNAL=1
//Have include stat.h
HAVE_STAT_H:INTERNAL=
//Have include stdarg.h
HAVE_STDARG_H:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdexcept
HAVE_STDEXCEPT:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include stdio.h
HAVE_STDIO_H:INTERNAL=1
//Have include stdlib.h
HAVE_STDLIB_H:INTERNAL=1
//Have include strings.h
HAVE_STRINGS_H:INTERNAL=
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Test HAVE_SYMBOL_FLOAT_T
HAVE_SYMBOL_FLOAT_T:INTERNAL=1
//Have include sys/dir.h
HAVE_SYS_DIR_H:INTERNAL=
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=
//Have include sys/ndir.h
HAVE_SYS_NDIR_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/timeb.h
HAVE_SYS_TIMEB_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include tchar.h
HAVE_TCHAR_H:INTERNAL=1
//Have include tr1/unordered_map
HAVE_TR1_UNORDERED_MAP:INTERNAL=
//Have include tr1/unordered_set
HAVE_TR1_UNORDERED_SET:INTERNAL=
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=
//Have include vector
HAVE_VECTOR:INTERNAL=1
//Have include wchar.h
HAVE_WCHAR_H:INTERNAL=1
//Have include wctype.h
HAVE_WCTYPE_H:INTERNAL=1
//Have include windef.h
HAVE_WINDEF_H:INTERNAL=
//Have include windows.h
HAVE_WINDOWS_H:INTERNAL=1
//Have include winerror.h
HAVE_WINERROR_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_DWORD:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_INT16_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_INT32_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_INT64_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_INT8_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_LONG:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_SIZE_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_UINT16_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_UINT32_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_UINT64_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE__CL_HAVE_TYPE_UINT8_T:INTERNAL=TRUE
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DEBUG
ZLIB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_RELEASE
ZLIB_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//Components requested for this build tree.
_Boost_COMPONENTS_SEARCHED:INTERNAL=
//Last used Boost_INCLUDE_DIR value.
_Boost_INCLUDE_DIR_LAST:INTERNAL=Boost_INCLUDE_DIR-NOTFOUND
//Last used Boost_NAMESPACE value.
_Boost_NAMESPACE_LAST:INTERNAL=boost
//Last used Boost_USE_MULTITHREADED value.
_Boost_USE_MULTITHREADED_LAST:INTERNAL=TRUE
//Chose option for HAVE_TYPE__TIMEB - _timeb
_CHOOSE_STATUS_OPTION_HAVE_TYPE__TIMEB:INTERNAL=ON
//Chose type for int16_t - signed int16_t
_CHOOSE_STATUS_TYPE_INT16_T:INTERNAL=ON
//Chose type for int32_t - signed int32_t
_CHOOSE_STATUS_TYPE_INT32_T:INTERNAL=ON
//Chose type for int64_t - signed int64_t
_CHOOSE_STATUS_TYPE_INT64_T:INTERNAL=ON
//Chose type for int8_t - signed int8_t
_CHOOSE_STATUS_TYPE_INT8_T:INTERNAL=ON
//Chose type for size_t - unsigned size_t
_CHOOSE_STATUS_TYPE_SIZE_T:INTERNAL=ON
//Chose type for uint16_t - unsigned uint16_t
_CHOOSE_STATUS_TYPE_UINT16_T:INTERNAL=ON
//Chose type for uint32_t - unsigned uint32_t
_CHOOSE_STATUS_TYPE_UINT32_T:INTERNAL=ON
//Chose type for uint64_t - unsigned uint64_t
_CHOOSE_STATUS_TYPE_UINT64_T:INTERNAL=ON
//Chose type for uint8_t - unsigned uint8_t
_CHOOSE_STATUS_TYPE_UINT8_T:INTERNAL=ON
//Chose type for _cl_dword_t - unsigned long
_CHOOSE_STATUS_TYPE__CL_DWORD_T:INTERNAL=ON
//Have function printf
_CL_HAVE_FUNCTION_PRINTF:INTERNAL=
//Test _CL_HAVE_OPTION__TIMEB
_CL_HAVE_OPTION__TIMEB:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(DWORD)
_CL_HAVE_TYPE_DWORD:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(int16_t)
_CL_HAVE_TYPE_INT16_T:INTERNAL=2
//CHECK_TYPE_SIZE: sizeof(int32_t)
_CL_HAVE_TYPE_INT32_T:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(int64_t)
_CL_HAVE_TYPE_INT64_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(int8_t)
_CL_HAVE_TYPE_INT8_T:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(long)
_CL_HAVE_TYPE_LONG:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(size_t)
_CL_HAVE_TYPE_SIZE_T:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(uint16_t)
_CL_HAVE_TYPE_UINT16_T:INTERNAL=2
//CHECK_TYPE_SIZE: sizeof(uint32_t)
_CL_HAVE_TYPE_UINT32_T:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(uint64_t)
_CL_HAVE_TYPE_UINT64_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(uint8_t)
_CL_HAVE_TYPE_UINT8_T:INTERNAL=1
//Have includes sys/time.h;time.h
_CL_TIME_WITH_SYS_TIME:INTERNAL=

